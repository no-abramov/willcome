<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Theme;component/Themes/Colors/WC-UI-BrushColor.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FlatButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="{DynamicResource BackgroundBehindBrush}" StrokeDashArray="4 2" StrokeThickness="1" UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Solid -->

    <Style x:Key="WillComeUI.Button.Solid" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FlatButtonFocusVisualStyle}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundActiveBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderActiveBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBehindBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource TextFontFamilyBase}" />
        <Setter Property="FontSize" Value="{DynamicResource TextSize}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Margin="0" CornerRadius="5" ClipToBounds="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                        <ContentControl IsTabStop="False" x:Name="PART_ContentPresenter"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        TextBlock.FontFamily="{DynamicResource TextFontFamilyBase}"
                                        TextBlock.Foreground="{TemplateBinding Foreground}"
                                        TextBlock.FontSize="{TemplateBinding FontSize}"
                                        Content="{TemplateBinding Content}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundHoverBrush.Accent1}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderHoverBrush.Accent1}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBehindBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundPressBrush.Accent1}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderPressBrush.Accent1}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBehindBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource BackgroundInactiveBrush.Accent4}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderInactiveBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundInactiveBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WillComeUI.Button.Solid.Small" TargetType="{x:Type Button}" BasedOn="{StaticResource WillComeUI.Button.Solid}">
        <Setter Property="Width" Value="{DynamicResource Control.Width.Small}"/>
        <Setter Property="Height" Value="{DynamicResource Control.Hight.Small}"/>
        <Setter Property="FontSize" Value="{DynamicResource TextSize.Small}"/>
    </Style>

    <Style x:Key="WillComeUI.Button.Solid.Medium" TargetType="{x:Type Button}" BasedOn="{StaticResource WillComeUI.Button.Solid}">
        <Setter Property="Width" Value="{DynamicResource Control.Width.Medium}"/>
        <Setter Property="Height" Value="{DynamicResource Control.Hight.Medium}"/>
        <Setter Property="FontSize" Value="{DynamicResource TextSize.Medium}"/>
    </Style>

    <Style x:Key="WillComeUI.Button.Solid.Large" TargetType="{x:Type Button}" BasedOn="{StaticResource WillComeUI.Button.Solid}">
        <Setter Property="Width" Value="{DynamicResource Control.Width.Large}"/>
        <Setter Property="Height" Value="{DynamicResource Control.Hight.Large}"/>
        <Setter Property="FontSize" Value="{DynamicResource TextSize.Large}"/>
    </Style>

    <!-- Borderless -->

    <Style x:Key="WillComeUI.Button.Borderless" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FlatButtonFocusVisualStyle}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource BackgroundActiveBrush.Accent4}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundActiveBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource TextFontFamilyBase}" />
        <Setter Property="FontSize" Value="{DynamicResource TextSize.Small}" />
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Margin="0" CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                        <ContentControl x:Name="PART_ContentPresenter" IsTabStop="False"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundHoverBrush.Accent4}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundPressBrush.Accent4}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource BackgroundInactiveBrush.Accent4}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundInactiveBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WillComeUI.Button.Borderless.Small" TargetType="{x:Type Button}" BasedOn="{StaticResource WillComeUI.Button.Borderless}">
        <Setter Property="Width" Value="{DynamicResource Control.Width.Small}"/>
        <Setter Property="Height" Value="{DynamicResource Control.Hight.Small}"/>
        <Setter Property="FontSize" Value="{DynamicResource TextSize.Small}"/>
    </Style>

    <Style x:Key="WillComeUI.Button.Borderless.Medium" TargetType="{x:Type Button}" BasedOn="{StaticResource WillComeUI.Button.Borderless}">
        <Setter Property="Width" Value="{DynamicResource Control.Width.Medium}"/>
        <Setter Property="Height" Value="{DynamicResource Control.Hight.Medium}"/>
        <Setter Property="FontSize" Value="{DynamicResource TextSize.Medium}"/>
    </Style>

    <Style x:Key="WillComeUI.Button.Borderless.Large" TargetType="{x:Type Button}" BasedOn="{StaticResource WillComeUI.Button.Borderless}">
        <Setter Property="Width" Value="{DynamicResource Control.Width.Large}"/>
        <Setter Property="Height" Value="{DynamicResource Control.Hight.Large}"/>
        <Setter Property="FontSize" Value="{DynamicResource TextSize.Large}"/>
    </Style>

    <!-- Hyperlink -->

    <Style x:Key="WillComeUI.Button.Hyperlink" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{DynamicResource TextFontFamilyBase}" />
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ContentPresenter ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundHyperlinkActiveBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundHyperlinkHoverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WillComeUI.Button.Hyperlink.Small" TargetType="{x:Type Button}" BasedOn="{StaticResource WillComeUI.Button.Hyperlink}">
        <Setter Property="FontSize" Value="{DynamicResource TextSize.Small}"/>
    </Style>

    <Style x:Key="WillComeUI.Button.Hyperlink.Medium" TargetType="{x:Type Button}" BasedOn="{StaticResource WillComeUI.Button.Hyperlink}">
        <Setter Property="FontSize" Value="{DynamicResource TextSize.Medium}"/>
    </Style>

    <Style x:Key="WillComeUI.Button.Hyperlink.Large" TargetType="{x:Type Button}" BasedOn="{StaticResource WillComeUI.Button.Hyperlink}">
        <Setter Property="FontSize" Value="{DynamicResource TextSize.Large}"/>
    </Style>
    
    <!-- Icon Button -->

    <Style x:Key="WillComeUI.Button.OnlyIcon.Borderless" TargetType="Button">
        <Setter Property="BorderBrush" Value="{DynamicResource ToolMenuIconBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderSize}" />
        <Setter Property="Width" Value="{Binding Width}" />
        <Setter Property="Height" Value="{Binding Height}" />
        <Setter Property="Border.Padding" Value="{Binding Border.Padding}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" CornerRadius="5" Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Path x:Name="Icon" Fill="{DynamicResource ToolMenuIconBrush}" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{TemplateBinding Tag}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource BackgroundBehindBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundHoverBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource BackgroundBehindBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundPressBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource ToolMenuIconBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundInactiveBrush.Accent2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WillComeUI.Button.OnlyIcon.Solid" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroundActiveBrush}" />
        <Setter Property="Width" Value="{Binding Width}" />
        <Setter Property="Height" Value="{Binding Height}" />
        <Setter Property="Border.Padding" Value="{Binding Border.Padding}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" CornerRadius="5" 
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Path x:Name="Icon" Fill="{DynamicResource BackgroundBehindBrush}" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{TemplateBinding Tag}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundPressBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource ToolMenuIconBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundInactiveBrush.Accent2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WillComeUI.Button.OnlyIcon.Solo" TargetType="Button">
        <Setter Property="Width" Value="{Binding Width}" />
        <Setter Property="Height" Value="{Binding Height}" />
        <Setter Property="Border.Padding" Value="{Binding Border.Padding}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" CornerRadius="5" 
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Path x:Name="Icon" Fill="{DynamicResource ToolMenuIconBrush}" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{TemplateBinding Tag}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource BackgroundHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource BackgroundPressBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource ToolMenuIconBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundInactiveBrush.Accent2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>